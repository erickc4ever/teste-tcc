/**
 * ==================================================================================
 * main.js - Cérebro da "änalitks"
 * ----------------------------------------------------------------------------------
 * Este ficheiro contém a lógica central da aplicação, incluindo configuração,
 * seletores de elementos, gestão de estado, navegação, autenticação e
 * as funções de cálculo para todas as ferramentas.
 * ==================================================================================
 */

// Adiciona um "ouvinte" que espera o HTML estar 100% carregado para executar o código.
// Isso garante que todos os elementos (botões, telas, etc.) já existam quando o JavaScript tentar encontrá-los.
document.addEventListener('DOMContentLoaded', () => {

    // ==================================================================================
    // PARTE 1: CONFIGURAÇÃO E SELETORES DE ELEMENTOS
    // ----------------------------------------------------------------------------------
    // Esta secção prepara o terreno: conecta-se ao backend e cria um "mapa" de todos
    // os elementos importantes do HTML para que possamos controlá-los facilmente.
    // ==================================================================================
    console.log("Iniciando o main.js...");

    // --- 1. Configuração do Backend (Supabase) ---
    const SUPABASE_URL = 'https://ejddiovmtjpipangyqeo.supabase.co';
    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVqZGRpb3ZtdGpwaXBhbmd5cWVvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3MTU4MDksImV4cCI6MjA3NDI5MTgwOX0.GH53mox_cijkhqAxy-sNmvxGcgtoLzuoE5sfP9hHdho';
    const supabaseClient = supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
    console.log('Cliente Supabase inicializado.');

    // --- 2. Mapeamento de Telas Principais ---
    const screens = {
        auth: document.getElementById('auth-screen'),
        welcome: document.getElementById('welcome-screen'),
        dashboard: document.getElementById('dashboard-screen'),
        pjDashboard: document.getElementById('pj-dashboard-screen'),
        salario: document.getElementById('salario-screen'),
        investimentos: document.getElementById('investimentos-screen'),
        ferias: document.getElementById('ferias-screen'),
        decimoTerceiro: document.getElementById('decimo-terceiro-screen'),
        horaValor: document.getElementById('hora-valor-screen'),
        irpf: document.getElementById('irpf-screen'),
        simplesNacional: document.getElementById('simples-nacional-screen'),
        pjHoraValor: document.getElementById('pj-hora-valor-screen'),
        profile: document.getElementById('profile-screen'),
        reports: document.getElementById('reports-screen'),
        historico: document.getElementById('historico-screen'),
        aposentadoria: document.getElementById('aposentadoria-screen'),
    };

    // --- 3. Mapeamento de Componentes (Seletores) ---
    // 3.1 - Autenticação e Boas-Vindas
    const authForms = { login: document.getElementById('login-form'), signup: document.getElementById('signup-form'), choices: document.getElementById('auth-choices') };
    const authButtons = { showLogin: document.getElementById('show-login-btn'), showSignup: document.getElementById('show-signup-btn'), showLoginLink: document.getElementById('show-login-link'), showSignupLink: document.getElementById('show-signup-link'), logout: document.getElementById('logout-btn'), logoutPj: document.getElementById('logout-btn-pj') };
    const welcomeScreenElements = { welcomeMessage: document.getElementById('welcome-message-choice'), buttons: { clt: document.getElementById('goto-clt-dashboard-btn'), pj: document.getElementById('goto-pj-dashboard-btn') } };

    // 3.2 - Dashboards e Modal
    const dashboardElements = { quote: document.getElementById('dashboard-quote') };
    const dashboardButtons = { salario: document.getElementById('goto-salario-btn'), investimentos: document.getElementById('goto-investimentos-btn'), ferias: document.getElementById('goto-ferias-btn'), decimoTerceiro: document.getElementById('goto-decimo-terceiro-btn'), horaValor: document.getElementById('goto-hora-valor-btn'), irpf: document.getElementById('goto-irpf-btn'), aposentadoria: document.getElementById('goto-aposentadoria-btn'), profile: document.getElementById('goto-profile-btn'), reports: document.getElementById('goto-reports-btn'), historico: document.getElementById('goto-historico-btn'), showAbout: document.getElementById('show-about-btn') };
    const pjDashboardButtons = { simples: document.getElementById('goto-simples-nacional-btn'), horaValorPj: document.getElementById('goto-pj-hora-valor-btn'), aposentadoria: document.getElementById('goto-aposentadoria-btn-pj'), backToWelcome: document.getElementById('back-to-welcome-from-pj') };
    const modalElements = { overlay: document.getElementById('about-modal-overlay'), closeBtn: document.getElementById('close-about-btn') };

    // 3.3 - Ferramentas CLT
    const salarioElements = { form: { salarioBruto: document.getElementById('salario-bruto'), dependentes: document.getElementById('salario-dependentes') }, buttons: { calcular: document.getElementById('calcular-salario-btn'), voltar: document.getElementById('back-to-dashboard-from-salario'), salvar: document.getElementById('salvar-salario-btn') }, results: { container: document.getElementById('salario-results-section'), salarioBruto: document.getElementById('resultado-salario-bruto'), inss: document.getElementById('resultado-inss'), baseIrrf: document.getElementById('resultado-base-irrf'), irrf: document.getElementById('resultado-irrf'), salarioLiquido: document.getElementById('resultado-salario-liquido') } };
    const investimentosElements = { form: { valorInicial: document.getElementById('valor-inicial'), aporteMensal: document.getElementById('aporte-mensal'), taxaJurosAnual: document.getElementById('taxa-juros-anual'), periodoAnos: document.getElementById('periodo-anos') }, buttons: { calcular: document.getElementById('calcular-investimentos-btn'), voltar: document.getElementById('back-to-dashboard-from-investimentos'), salvar: document.getElementById('salvar-investimentos-btn') }, results: { container: document.getElementById('investimentos-results-section'), valorFinal: document.getElementById('resultado-valor-final'), totalInvestido: document.getElementById('resultado-total-investido'), totalJuros: document.getElementById('resultado-total-juros') } };
    const feriasElements = { form: { salarioBruto: document.getElementById('ferias-salario-bruto'), dias: document.getElementById('ferias-dias'), venderDias: document.getElementById('ferias-vender-dias'), adiantar13: document.getElementById('ferias-adiantar-13') }, buttons: { calcular: document.getElementById('calcular-ferias-btn'), voltar: document.getElementById('back-to-dashboard-from-ferias'), salvar: document.getElementById('salvar-ferias-btn') }, results: { container: document.getElementById('ferias-results-section'), feriasBrutas: document.getElementById('resultado-ferias-brutas'), tercoConstitucional: document.getElementById('resultado-terco-constitucional'), abonoPecuniario: document.getElementById('resultado-abono-pecuniario'), totalBruto: document.getElementById('resultado-total-bruto-ferias'), inss: document.getElementById('resultado-inss-ferias'), irrf: document.getElementById('resultado-irrf-ferias'), adiantamento13: document.getElementById('resultado-adiantamento-13'), liquido: document.getElementById('resultado-liquido-ferias'), abonoLine: document.getElementById('abono-pecuniario-line'), adiantamento13Line: document.getElementById('adiantamento-13-line') } };
    const decimoTerceiroElements = { form: { salarioBruto: document.getElementById('decimo-terceiro-salario-bruto'), meses: document.getElementById('decimo-terceiro-meses'), dependentes: document.getElementById('decimo-terceiro-dependentes') }, buttons: { calcular: document.getElementById('calcular-decimo-terceiro-btn'), voltar: document.getElementById('back-to-dashboard-from-decimo-terceiro'), salvar: document.getElementById('salvar-decimo-terceiro-btn') }, results: { container: document.getElementById('decimo-terceiro-results-section'), bruto: document.getElementById('resultado-13-bruto'), primeiraParcela: document.getElementById('resultado-13-primeira-parcela'), segundaParcelaLiquida: document.getElementById('resultado-13-segunda-parcela-liquida'), liquidoTotal: document.getElementById('resultado-13-liquido-total') } };
    const horaValorElements = { form: { salario: document.getElementById('hora-valor-salario'), horasDia: document.getElementById('hora-valor-horas-dia'), diasSemana: document.getElementById('hora-valor-dias-semana') }, buttons: { calcular: document.getElementById('calcular-hora-valor-btn'), voltar: document.getElementById('back-to-dashboard-from-hora-valor'), salvar: document.getElementById('salvar-hora-valor-btn') }, results: { container: document.getElementById('hora-valor-results-section'), valorHora: document.getElementById('resultado-hora-valor'), explicacao: document.getElementById('explicacao-hora-valor') } };
    const irpfElements = { form: { rendimentosAnuais: document.getElementById('rendimentos-anuais'), despesasSaude: document.getElementById('despesas-saude'), despesasEducacao: document.getElementById('despesas-educacao'), dependentes: document.getElementById('dependentes') }, buttons: { calcular: document.getElementById('calcular-irpf-btn'), voltar: document.getElementById('back-to-dashboard-from-irpf'), salvar: document.getElementById('salvar-irpf-btn') }, results: { container: document.getElementById('irpf-results-section'), completa: document.getElementById('resultado-irpf-completa'), simplificada: document.getElementById('resultado-irpf-simplificada'), recomendacao: document.getElementById('recomendacao-irpf').querySelector('p') } };

    // 3.4 - Ferramentas PJ
    const simplesNacionalElements = { form: { faturamentoMensal: document.getElementById('faturamento-mensal'), anexo: document.getElementById('anexo-simples') }, buttons: { calcular: document.getElementById('calcular-simples-btn'), voltar: document.getElementById('back-to-pj-dashboard-from-simples'), salvar: document.getElementById('salvar-simples-nacional-btn') }, results: { container: document.getElementById('simples-results-section'), rbt12: document.getElementById('resultado-rbt12'), aliquotaEfetiva: document.getElementById('resultado-aliquota-efetiva'), valorDas: document.getElementById('resultado-valor-das') } };
    const pjHoraValorElements = { form: { salarioDesejado: document.getElementById('pj-salario-desejado'), custosFixos: document.getElementById('pj-custos-fixos'), feriasAno: document.getElementById('pj-ferias-ano'), horasDia: document.getElementById('pj-horas-dia'), diasSemana: document.getElementById('pj-dias-semana') }, buttons: { calcular: document.getElementById('calcular-pj-hora-valor-btn'), voltar: document.getElementById('back-to-pj-dashboard-from-hora'), salvar: document.getElementById('salvar-pj-hora-valor-btn') }, results: { container: document.getElementById('pj-hora-valor-results-section'), valorHora: document.getElementById('resultado-pj-hora-valor'), explicacao: document.getElementById('explicacao-pj-hora-valor') } };

    // 3.5 - Ferramentas e Telas Comuns
    const aposentadoriaElements = { form: { idadeAtual: document.getElementById('aposentadoria-idade-atual'), idadeObjetivo: document.getElementById('aposentadoria-idade-objetivo'), patrimonioAtual: document.getElementById('aposentadoria-patrimonio-atual'), aporteMensal: document.getElementById('aposentadoria-aporte-mensal'), rendaDesejada: document.getElementById('aposentadoria-renda-desejada') }, buttons: { calcular: document.getElementById('calcular-aposentadoria-btn'), voltar: document.getElementById('back-to-dashboard-from-aposentadoria'), salvar: document.getElementById('salvar-aposentadoria-btn') }, results: { container: document.getElementById('aposentadoria-results-section'), objetivo: document.getElementById('resultado-aposentadoria-objetivo'), projecao: document.getElementById('resultado-aposentadoria-projecao'), recomendacao: document.getElementById('aposentadoria-recomendacao').querySelector('p') } };
    const profileElements = { form: { salarioBruto: document.getElementById('profile-salario-bruto'), dependentes: document.getElementById('profile-dependentes'), horasDia: document.getElementById('profile-horas-dia'), diasSemana: document.getElementById('profile-dias-semana'), }, buttons: { salvar: document.getElementById('salvar-perfil-btn'), voltar: document.getElementById('back-to-dashboard-from-profile'), }, statusMessage: document.getElementById('profile-status-message'), };
    const reportsElements = { salaryChart: document.getElementById('salary-chart'), investmentChart: document.getElementById('investment-chart'), notice: document.getElementById('reports-notice'), content: document.getElementById('reports-content'), backButton: document.getElementById('back-to-dashboard-from-reports'), summary: { dailyValue: document.getElementById('summary-daily-value'), thirteenthValue: document.getElementById('summary-13th-value') } };
    const historicoElements = { lista: document.getElementById('historico-lista'), voltar: document.getElementById('back-to-dashboard-from-historico') };

    // ==================================================================================
    // PARTE 2: DADOS E CONTEÚDO
    // ----------------------------------------------------------------------------------
    let userProfile = null;
    let salaryChartInstance = null;
    let investmentChartInstance = null;
    const dashboardQuotes = ["Um objetivo sem um plano é apenas um desejo. Use as nossas ferramentas para transformar os seus desejos em planos.", "A melhor altura para plantar uma árvore foi há 20 anos. A segunda melhor altura é agora. O mesmo vale para os seus investimentos.", "Cuidado com as pequenas despesas; um pequeno furo pode afundar um grande navio.", "O seu futuro financeiro é criado pelo que você faz hoje, não amanhã. Cada cálculo é um passo na direção certa.", "Saber o valor do seu tempo é o primeiro passo para garantir que ele seja bem recompensado."];

    // ==================================================================================
    // PARTE 3: FUNÇÕES DE GESTÃO DE TELA E UI
    // ----------------------------------------------------------------------------------
    function showScreen(screenName) { Object.values(screens).forEach(screen => { if (screen) screen.classList.add('hidden'); }); if (screens[screenName]) { screens[screenName].classList.remove('hidden'); console.log(`A exibir a tela: ${screenName}`); } else { console.warn(`AVISO: A tela "${screenName}" não foi criada.`); alert(`A funcionalidade para "${screenName}" ainda está em desenvolvimento!`); if(screens.dashboard) screens.dashboard.classList.remove('hidden'); } }
    async function updateUserUI(user) { if (user) { await fetchUserProfile(user); showScreen('welcome'); } else { userProfile = null; showScreen('auth'); } }

    // ==================================================================================
    // PARTE 4: FUNÇÕES DE AUTENTICAÇÃO E PERFIL
    // ----------------------------------------------------------------------------------
    async function handleLogin(event) { event.preventDefault(); const email = authForms.login.querySelector('#login-email').value; const password = authForms.login.querySelector('#login-password').value; const { error } = await supabaseClient.auth.signInWithPassword({ email, password }); if (error) alert(`Erro no login: ${error.message}`); }
    async function handleSignup(event) { event.preventDefault(); const email = authForms.signup.querySelector('#signup-email').value; const password = authForms.signup.querySelector('#signup-password').value; const { error } = await supabaseClient.auth.signUp({ email, password }); if (error) { alert(`Erro no registo: ${error.message}`); } else { alert('Registo realizado! Verifique o seu e-mail para confirmar a conta e depois faça o login.'); authForms.signup.classList.add('hidden'); authForms.login.classList.remove('hidden'); } }
    async function handleLogout() { await supabaseClient.auth.signOut(); showScreen('auth'); }
    async function handleSaveProfile() { const { data: { user } } = await supabaseClient.auth.getUser(); if (!user) return; const updates = { user_id: user.id, salario_bruto: parseFloat(profileElements.form.salarioBruto.value) || null, dependentes: parseInt(profileElements.form.dependentes.value) || null, horas_dia: parseFloat(profileElements.form.horasDia.value) || null, dias_semana: parseInt(profileElements.form.diasSemana.value) || null, updated_at: new Date(), }; const { error } = await supabaseClient.from('profiles').upsert(updates); if (error) { profileElements.statusMessage.textContent = `Erro: ${error.message}`; } else { userProfile = updates; profileElements.statusMessage.textContent = 'Perfil salvo com sucesso!'; } profileElements.statusMessage.classList.remove('hidden'); setTimeout(() => profileElements.statusMessage.classList.add('hidden'), 3000); }
    async function fetchUserProfile(user) { if (!user) return; const { data, error } = await supabaseClient.from('profiles').select('*').eq('user_id', user.id).single(); if (data) userProfile = data; }
    function preencherFormulariosComPerfil() { if (!userProfile) return; if (salarioElements.form.salarioBruto && userProfile.salario_bruto) salarioElements.form.salarioBruto.value = userProfile.salario_bruto; if (salarioElements.form.dependentes && userProfile.dependentes) salarioElements.form.dependentes.value = userProfile.dependentes; if (feriasElements.form.salarioBruto && userProfile.salario_bruto) feriasElements.form.salarioBruto.value = userProfile.salario_bruto; if (decimoTerceiroElements.form.salarioBruto && userProfile.salario_bruto) decimoTerceiroElements.form.salarioBruto.value = userProfile.salario_bruto; if (decimoTerceiroElements.form.dependentes && userProfile.dependentes) decimoTerceiroElements.form.dependentes.value = userProfile.dependentes; if (horaValorElements.form.salario && userProfile.salario_bruto) horaValorElements.form.salario.value = userProfile.salario_bruto; if (horaValorElements.form.horasDia && userProfile.horas_dia) horaValorElements.form.horasDia.value = userProfile.horas_dia; if (horaValorElements.form.diasSemana && userProfile.dias_semana) horaValorElements.form.diasSemana.value = userProfile.dias_semana; }

    // ==================================================================================
    // PARTE 5: FUNÇÕES DE CÁLCULO AUXILIARES E GRÁFICOS
    // ----------------------------------------------------------------------------------
    function calcularINSS(base) { const faixas = [{t:1412,a:0.075,p:0},{t:2666.68,a:0.09,p:21.18},{t:4000.03,a:0.12,p:101.18},{t:7786.02,a:0.14,p:181.18}]; if(base>faixas[3].t)return(faixas[3].t*faixas[3].a)-faixas[3].p;for(const f of faixas)if(base<=f.t)return(base*f.a)-f.p;return 0; }
    function calcularIRRF(base, dep=0) { const baseReal=base-(dep*189.59);const faixas=[{t:2259.2,a:0,p:0},{t:2826.65,a:0.075,p:169.44},{t:3751.05,a:0.15,p:381.44},{t:4664.68,a:0.225,p:662.77},{t:Infinity,a:0.275,p:896}];for(const f of faixas)if(baseReal<=f.t)return Math.max(0,(baseReal*f.a)-f.p);return 0;}
    function calcularImpostoAnual(base) { const faixas=[{l:24511.92,a:0,d:0},{l:33919.8,a:0.075,d:1838.39},{l:45012.6,a:0.15,d:4382.38},{l:55976.16,a:0.225,d:7758.32},{l:Infinity,a:0.275,d:10557.13}];for(const f of faixas)if(base<=f.l)return Math.max(0,(base*f.a)-f.d);return 0;}
    async function renderSalaryChart() { if(salaryChartInstance)salaryChartInstance.destroy();const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const canvas=document.getElementById('salary-chart');const container=canvas.parentElement;const{data,error}=await supabaseClient.from('historico_salarios').select('created_at,salario_liquido_calculado').eq('user_id',user.id).order('created_at',{ascending:true});if(error||!data||data.length===0){container.innerHTML='<p class="explanation-text text-center">Salve um cálculo de salário para ver a evolução aqui!</p>';return;}container.innerHTML='<canvas id="salary-chart"></canvas>';salaryChartInstance=new Chart(document.getElementById('salary-chart').getContext('2d'),{type:'line',data:{labels:data.map(i=>new Date(i.created_at).toLocaleDateString('pt-BR')),datasets:[{label:'Salário Líquido',data:data.map(i=>i.salario_liquido_calculado),borderColor:'#6D28D9',fill:true}]},options:{responsive:true,maintainAspectRatio:false}}); }
    async function renderInvestmentChart() { if(investmentChartInstance)investmentChartInstance.destroy();const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const canvas=document.getElementById('investment-chart');const container=canvas.parentElement;const{data,error}=await supabaseClient.from('historico_investimentos').select('created_at,valor_final_calculado,periodo_anos_informado').eq('user_id',user.id).order('created_at',{ascending:true});if(error||!data||data.length===0){container.innerHTML='<p class="explanation-text text-center">Salve uma simulação de investimento para ver a evolução aqui!</p>';return;}container.innerHTML='<canvas id="investment-chart"></canvas>';investmentChartInstance=new Chart(document.getElementById('investment-chart').getContext('2d'),{type:'bar',data:{labels:data.map(i=>`Em ${new Date(i.created_at).toLocaleDateString('pt-BR')} (${i.periodo_anos_informado}a)`),datasets:[{label:'Valor Final',data:data.map(i=>i.valor_final_calculado),backgroundColor:'#8B5CF6'}]},options:{responsive:true,maintainAspectRatio:false}}); }
    function renderSummaryCards() { if(!userProfile||!userProfile.salario_bruto)return;const s=userProfile.salario_bruto,d=userProfile.dias_semana||5;const inss=calcularINSS(s);const liq=s-inss-calcularIRRF(s-inss,userProfile.dependentes||0);const vDia=liq/(d*4.5);reportsElements.summary.dailyValue.textContent=`R$ ${vDia.toFixed(2)}`;const d13=s-calcularINSS(s)-calcularIRRF(s-calcularINSS(s),userProfile.dependentes||0);reportsElements.summary.thirteenthValue.textContent=`R$ ${d13.toFixed(2)}`; }

    // ==================================================================================
    // PARTE 6: LÓGICA PRINCIPAL DAS FERRAMENTAS
    // ----------------------------------------------------------------------------------
    function executarCalculoSalario(){const s=parseFloat(salarioElements.form.salarioBruto.value)||0,d=parseInt(salarioElements.form.dependentes.value)||0;if(s<=0)return;const inss=calcularINSS(s),baseIrrf=s-inss,irrf=calcularIRRF(baseIrrf,d),liq=s-inss-irrf;salarioElements.results.salarioBruto.textContent=`R$ ${s.toFixed(2)}`;salarioElements.results.inss.textContent=`- R$ ${inss.toFixed(2)}`;salarioElements.results.baseIrrf.textContent=`R$ ${baseIrrf.toFixed(2)}`;salarioElements.results.irrf.textContent=`- R$ ${irrf.toFixed(2)}`;salarioElements.results.salarioLiquido.textContent=`R$ ${liq.toFixed(2)}`;salarioElements.results.container.classList.remove('hidden');salarioElements.buttons.salvar.classList.remove('hidden');}
    function executarSimulacaoInvestimentos(){const vI=parseFloat(investimentosElements.form.valorInicial.value)||0,aM=parseFloat(investimentosElements.form.aporteMensal.value)||0,tA=parseFloat(investimentosElements.form.taxaJurosAnual.value)||0,pA=parseInt(investimentosElements.form.periodoAnos.value)||0;if(tA<=0||pA<=0)return;const tM=tA/100/12,nM=pA*12;let vF=vI;for(let i=0;i<nM;i++)vF=(vF+aM)*(1+tM);const tI=vI+(aM*nM),tJ=vF-tI;investimentosElements.results.valorFinal.textContent=`R$ ${vF.toFixed(2)}`;investimentosElements.results.totalInvestido.textContent=`R$ ${tI.toFixed(2)}`;investimentosElements.results.totalJuros.textContent=`R$ ${tJ.toFixed(2)}`;investimentosElements.results.container.classList.remove('hidden');investimentosElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoFerias(){const s=parseFloat(feriasElements.form.salarioBruto.value)||0,d=parseInt(feriasElements.form.dias.value)||30,vD=feriasElements.form.venderDias.checked,a13=feriasElements.form.adiantar13.checked;if(s<=0)return;const fP=(s/30)*d,tC=fP/3;let aP=0;if(vD)aP=(s/30)*10;const tB=fP+tC,inss=calcularINSS(tB),irrf=calcularIRRF(tB-inss,userProfile?userProfile.dependentes:0);let ad13=0;if(a13)ad13=(s/2)/2;const liq=tB-inss-irrf+aP+ad13;feriasElements.results.feriasBrutas.textContent=`R$ ${fP.toFixed(2)}`;feriasElements.results.tercoConstitucional.textContent=`R$ ${tC.toFixed(2)}`;feriasElements.results.abonoPecuniario.textContent=`R$ ${aP.toFixed(2)}`;feriasElements.results.totalBruto.textContent=`R$ ${tB.toFixed(2)}`;feriasElements.results.inss.textContent=`- R$ ${inss.toFixed(2)}`;feriasElements.results.irrf.textContent=`- R$ ${irrf.toFixed(2)}`;feriasElements.results.adiantamento13.textContent=`R$ ${ad13.toFixed(2)}`;feriasElements.results.liquido.textContent=`R$ ${liq.toFixed(2)}`;feriasElements.results.abonoLine.style.display=vD?'flex':'none';feriasElements.results.adiantamento13Line.style.display=a13?'flex':'none';feriasElements.results.container.classList.remove('hidden');feriasElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoDecimoTerceiro(){const s=parseFloat(decimoTerceiroElements.form.salarioBruto.value)||0,m=parseInt(decimoTerceiroElements.form.meses.value)||12,d=parseInt(decimoTerceiroElements.form.dependentes.value)||0;if(s<=0||m<=0)return;const b13=(s/12)*m,p1=b13/2,inss=calcularINSS(b13),irrf=calcularIRRF(b13-inss,d),p2L=p1-inss-irrf,liq=p1+p2L;decimoTerceiroElements.results.bruto.textContent=`R$ ${b13.toFixed(2)}`;decimoTerceiroElements.results.primeiraParcela.textContent=`R$ ${p1.toFixed(2)}`;decimoTerceiroElements.results.segundaParcelaLiquida.textContent=`R$ ${p2L.toFixed(2)}`;decimoTerceiroElements.results.liquidoTotal.textContent=`R$ ${liq.toFixed(2)}`;decimoTerceiroElements.results.container.classList.remove('hidden');decimoTerceiroElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoHoraValor(){const s=parseFloat(horaValorElements.form.salario.value)||0,h=parseFloat(horaValorElements.form.horasDia.value)||0,d=parseInt(horaValorElements.form.diasSemana.value)||0;if(s<=0||h<=0||d<=0)return;const hM=h*d*4.5,vH=s/hM;horaValorElements.results.valorHora.textContent=`R$ ${vH.toFixed(2)}`;horaValorElements.results.explicacao.textContent=`Baseado em ${hM.toFixed(1)} horas/mês.`;horaValorElements.results.container.classList.remove('hidden');horaValorElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoIrpf(){const r=parseFloat(irpfElements.form.rendimentosAnuais.value)||0,dS=parseFloat(irpfElements.form.despesasSaude.value)||0,dE=parseFloat(irpfElements.form.despesasEducacao.value)||0,dep=parseInt(irpfElements.form.dependentes.value)||0;if(r<=0)return;const baseSimp=r-(r*0.2),impSimp=calcularImpostoAnual(baseSimp);const dedEd=Math.min(dE,3561.5),dedDep=dep*2275.08,totDed=dS+dedEd+dedDep,baseComp=r-totDed,impComp=calcularImpostoAnual(baseComp);let rec='';if(impComp<impSimp)rec='Declaração Completa é mais vantajosa.';else rec='Declaração Simplificada é mais vantajosa.';irpfElements.results.completa.textContent=`R$ ${impComp.toFixed(2)}`;irpfElements.results.simplificada.textContent=`R$ ${impSimp.toFixed(2)}`;irpfElements.results.recomendacao.textContent=rec;irpfElements.results.container.classList.remove('hidden');irpfElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoSimplesNacional(){const fM=parseFloat(simplesNacionalElements.form.faturamentoMensal.value)||0,an=simplesNacionalElements.form.anexo.value;if(fM<=0)return;const rbt12=fM*12;let ali,par;const faixas={anexo3:[{t:18e4,a:0.06,p:0},{t:36e4,a:0.112,p:9360},{t:72e4,a:0.135,p:17640},{t:18e5,a:0.16,p:35640},{t:36e5,a:0.21,p:125640},{t:48e5,a:0.33,p:648e3}],anexo5:[{t:18e4,a:0.155,p:0},{t:36e4,a:0.18,p:4500},{t:72e4,a:0.195,p:9900},{t:18e5,a:0.205,p:17100},{t:36e5,a:0.23,p:62100},{t:48e5,a:0.305,p:54e4}]};for(const f of faixas[an]){if(rbt12<=f.t){ali=f.a;par=f.p;break;}}const aliEfe=((rbt12*ali)-par)/rbt12,vDAS=fM*aliEfe;simplesNacionalElements.results.rbt12.textContent=`R$ ${rbt12.toFixed(2)}`;simplesNacionalElements.results.aliquotaEfetiva.textContent=`${(aliEfe*100).toFixed(2)}%`;simplesNacionalElements.results.valorDas.textContent=`R$ ${vDAS.toFixed(2)}`;simplesNacionalElements.results.container.classList.remove('hidden');simplesNacionalElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoPjHoraValor(){const sD=parseFloat(pjHoraValorElements.form.salarioDesejado.value)||0,cF=parseFloat(pjHoraValorElements.form.custosFixos.value)||0,fA=parseInt(pjHoraValorElements.form.feriasAno.value)||0,hD=parseFloat(pjHoraValorElements.form.horasDia.value)||0,dS=parseInt(pjHoraValorElements.form.diasSemana.value)||0;if(sD<=0||hD<=0||dS<=0)return;const hM=(hD*dS*52-fA*hD)/12,vH=(sD+cF)/hM;pjHoraValorElements.results.valorHora.textContent=`R$ ${vH.toFixed(2)}`;pjHoraValorElements.results.explicacao.textContent=`Baseado em ${hM.toFixed(1)} horas produtivas/mês.`;pjHoraValorElements.results.container.classList.remove('hidden');pjHoraValorElements.buttons.salvar.classList.remove('hidden');}
    function executarCalculoAposentadoria(){const iA=parseInt(aposentadoriaElements.form.idadeAtual.value)||0,iO=parseInt(aposentadoriaElements.form.idadeObjetivo.value)||0,pA=parseFloat(aposentadoriaElements.form.patrimonioAtual.value)||0,aM=parseFloat(aposentadoriaElements.form.aporteMensal.value)||0,rD=parseFloat(aposentadoriaElements.form.rendaDesejada.value)||0;if(iA<=0||iO<=iA||aM<=0||rD<=0)return;const oT=rD*12*25,pM=(iO-iA)*12,tM=Math.pow(1.06,1/12)-1;let pT=pA;for(let i=0;i<pM;i++)pT=pT*(1+tM)+aM;let rec='',cor='';if(pT>=oT){rec='Parabéns! Você está no caminho certo.';cor='success-text';}else{const f=oT-pT;rec=`Faltam aprox. R$ ${f.toFixed(2)}. Considere aumentar o aporte.`;cor='error-text';}aposentadoriaElements.results.objetivo.textContent=`R$ ${oT.toFixed(2)}`;aposentadoriaElements.results.projecao.textContent=`R$ ${pT.toFixed(2)}`;aposentadoriaElements.results.recomendacao.textContent=rec;aposentadoriaElements.results.recomendacao.className=`text-center font-bold ${cor}`;aposentadoriaElements.results.container.classList.remove('hidden');aposentadoriaElements.buttons.salvar.classList.remove('hidden');}

    // ==================================================================================
    // PARTE 7: LÓGICA DE BACKEND (HISTÓRICO)
    // ----------------------------------------------------------------------------------
    async function handleSalvarSalario(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,salario_bruto_informado:parseFloat(salarioElements.form.salarioBruto.value)||0,dependentes_informado:parseInt(salarioElements.form.dependentes.value)||0,salario_liquido_calculado:parseFloat(salarioElements.results.salarioLiquido.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_salarios').insert(d);if(!error)salarioElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarInvestimentos(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,valor_inicial_informado:parseFloat(investimentosElements.form.valorInicial.value)||0,aporte_mensal_informado:parseFloat(investimentosElements.form.aporteMensal.value)||0,taxa_juros_informada:parseFloat(investimentosElements.form.taxaJurosAnual.value)||0,periodo_anos_informado:parseInt(investimentosElements.form.periodoAnos.value)||0,valor_final_calculado:parseFloat(investimentosElements.results.valorFinal.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_investimentos').insert(d);if(!error)investimentosElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarFerias(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,salario_bruto_informado:parseFloat(feriasElements.form.salarioBruto.value)||0,dias_ferias_informado:parseInt(feriasElements.form.dias.value)||0,vendeu_dias:feriasElements.form.venderDias.checked,adiantou_13:feriasElements.form.adiantar13.checked,liquido_receber_calculado:parseFloat(feriasElements.results.liquido.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_ferias').insert(d);if(!error)feriasElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarDecimoTerceiro(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,salario_bruto_informado:parseFloat(decimoTerceiroElements.form.salarioBruto.value)||0,meses_trabalhados_informado:parseInt(decimoTerceiroElements.form.meses.value)||0,liquido_total_calculado:parseFloat(decimoTerceiroElements.results.liquidoTotal.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_decimo_terceiro').insert(d);if(!error)decimoTerceiroElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarHoraValor(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,salario_informado:parseFloat(horaValorElements.form.salario.value)||0,horas_dia:parseFloat(horaValorElements.form.horasDia.value)||0,dias_semana:parseInt(horaValorElements.form.diasSemana.value)||0,valor_hora_calculado:parseFloat(horaValorElements.results.valorHora.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_valor_hora').insert(d);if(!error)horaValorElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarIRPF(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,rendimentos_anuais_informado:parseFloat(irpfElements.form.rendimentosAnuais.value)||0,imposto_completa_calculado:parseFloat(irpfElements.results.completa.textContent.replace('R$ ',''))||0,imposto_simplificada_calculado:parseFloat(irpfElements.results.simplificada.textContent.replace('R$ ',''))||0,recomendacao:irpfElements.results.recomendacao.textContent};const{error}=await supabaseClient.from('historico_irpf').insert(d);if(!error)irpfElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarSimplesNacional(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,faturamento_mensal_informado:parseFloat(simplesNacionalElements.form.faturamentoMensal.value)||0,anexo_informado:simplesNacionalElements.form.anexo.value,aliquota_efetiva_calculada:parseFloat(simplesNacionalElements.results.aliquotaEfetiva.textContent)||0,valor_das_calculado:parseFloat(simplesNacionalElements.results.valorDas.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_simples_nacional').insert(d);if(!error)simplesNacionalElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarPjHoraValor(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,salario_desejado_informado:parseFloat(pjHoraValorElements.form.salarioDesejado.value)||0,custos_fixos_informado:parseFloat(pjHoraValorElements.form.custosFixos.value)||0,ferias_ano_informado:parseInt(pjHoraValorElements.form.feriasAno.value)||0,valor_hora_calculado:parseFloat(pjHoraValorElements.results.valorHora.textContent.replace('R$ ',''))||0};const{error}=await supabaseClient.from('historico_pj_hora_valor').insert(d);if(!error)pjHoraValorElements.buttons.salvar.textContent='Salvo!';}
    async function handleSalvarAposentadoria(){const{data:{user}}=await supabaseClient.auth.getUser();if(!user)return;const d={user_id:user.id,idade_atual_informada:parseInt(aposentadoriaElements.form.idadeAtual.value)||0,idade_objetivo_informada:parseInt(aposentadoriaElements.form.idadeObjetivo.value)||0,patrimonio_atual_informado:parseFloat(aposentadoriaElements.form.patrimonioAtual.value)||0,aporte_mensal_informado:parseFloat(aposentadoriaElements.form.aporteMensal.value)||0,renda_desejada_informada:parseFloat(aposentadoriaElements.form.rendaDesejada.value)||0,objetivo_calculado:parseFloat(aposentadoriaElements.results.objetivo.textContent.replace('R$ ',''))||0,projecao_calculada:parseFloat(aposentadoriaElements.results.projecao.textContent.replace('R$ ',''))||0,recomendacao:aposentadoriaElements.results.recomendacao.textContent};const{error}=await supabaseClient.from('historico_aposentadoria').insert(d);if(!error)aposentadoriaElements.buttons.salvar.textContent='Salvo!';}
    async function carregarHistorico(){showScreen('historico');const{data:{user}}=await supabaseClient.auth.getUser();if(!user){historicoElements.lista.innerHTML='<p>Faça login para ver o histórico.</p>';return;}const res=await Promise.all([supabaseClient.from('historico_salarios').select('*').eq('user_id',user.id),supabaseClient.from('historico_investimentos').select('*').eq('user_id',user.id),supabaseClient.from('historico_ferias').select('*').eq('user_id',user.id),supabaseClient.from('historico_decimo_terceiro').select('*').eq('user_id',user.id),supabaseClient.from('historico_valor_hora').select('*').eq('user_id',user.id),supabaseClient.from('historico_irpf').select('*').eq('user_id',user.id),supabaseClient.from('historico_simples_nacional').select('*').eq('user_id',user.id),supabaseClient.from('historico_pj_hora_valor').select('*').eq('user_id',user.id),supabaseClient.from('historico_aposentadoria').select('*').eq('user_id',user.id)]);const todos=res.flatMap((r,i)=>r.data?r.data.map(d=>({...d,type:['salario','investimento','ferias','decimoTerceiro','horaValor','irpf','simplesNacional','pjHoraValor','aposentadoria'][i]})):[]).sort((a,b)=>new Date(b.created_at)-new Date(a.created_at));historicoElements.lista.innerHTML=todos.length===0?'<p>Nenhum cálculo salvo.</p>':todos.map(c=>{const dt=new Date(c.created_at).toLocaleDateString('pt-BR');let h='';switch(c.type){case 'salario':h=`<h3>Salário</h3><p>${dt}</p><div><span>Líquido:</span><span>R$ ${c.salario_liquido_calculado.toFixed(2)}</span></div>`;break;case 'investimento':h=`<h3>Investimento</h3><p>${dt}</p><div><span>Final:</span><span>R$ ${c.valor_final_calculado.toFixed(2)}</span></div>`;break;case 'ferias':h=`<h3>Férias</h3><p>${dt}</p><div><span>Líquido:</span><span>R$ ${c.liquido_receber_calculado.toFixed(2)}</span></div>`;break;case 'decimoTerceiro':h=`<h3>13º Salário</h3><p>${dt}</p><div><span>Líquido:</span><span>R$ ${c.liquido_total_calculado.toFixed(2)}</span></div>`;break;case 'horaValor':h=`<h3>Valor da Hora</h3><p>${dt}</p><div><span>Valor:</span><span>R$ ${c.valor_hora_calculado.toFixed(2)}</span></div>`;break;case 'irpf':h=`<h3>IRPF Anual</h3><p>${dt}</p><div><span>Rec:</span><span>${c.recomendacao}</span></div>`;break;case 'simplesNacional':h=`<h3>Simples Nacional</h3><p>${dt}</p><div><span>DAS:</span><span>R$ ${c.valor_das_calculado.toFixed(2)}</span></div>`;break;case 'pjHoraValor':h=`<h3>Hora (PJ)</h3><p>${dt}</p><div><span>Valor:</span><span>R$ ${c.valor_hora_calculado.toFixed(2)}</span></div>`;break;case 'aposentadoria':h=`<h3>Aposentadoria</h3><p>${dt}</p><div><span>Projeção:</span><span>R$ ${c.projecao_calculada.toFixed(2)}</span></div>`;break;}return `<div class="historico-item">${h}</div>`;}).join('');}

    // ==================================================================================
    // PARTE 8: REGISTO DE EVENT LISTENERS
    // ----------------------------------------------------------------------------------
    authButtons.showLogin.addEventListener('click',()=>{authForms.choices.classList.add('hidden');authForms.login.classList.remove('hidden');});
    authButtons.showSignup.addEventListener('click',()=>{authForms.choices.classList.add('hidden');authForms.signup.classList.remove('hidden');});
    authForms.login.addEventListener('submit',handleLogin);
    authForms.signup.addEventListener('submit',handleSignup);
    authButtons.logout.addEventListener('click',handleLogout);
    authButtons.logoutPj.addEventListener('click',handleLogout);
    welcomeScreenElements.buttons.clt.addEventListener('click',()=>{const r=Math.floor(Math.random()*dashboardQuotes.length);dashboardElements.quote.textContent=dashboardQuotes[r];showScreen('dashboard');});
    welcomeScreenElements.buttons.pj.addEventListener('click',()=>showScreen('pjDashboard'));
    Object.values(dashboardButtons).forEach(b=>b.addEventListener('click',e=>{const t=e.currentTarget.id.replace('goto-','').replace('-btn','');preencherFormulariosComPerfil();if(t==='reports'){renderSalaryChart();renderInvestmentChart();renderSummaryCards();showScreen('reports');}else if(t==='historico'){carregarHistorico();}else if(t==='showAbout'){modalElements.overlay.classList.remove('hidden');}else{showScreen(t);}}));
    Object.values(pjDashboardButtons).forEach(b=>b.addEventListener('click',e=>{const t=e.currentTarget.id.replace('goto-','').replace('-btn','');if(t==='backToWelcomeFromPj')showScreen('welcome');else showScreen(t.replace('Pj',''));}));
    salarioElements.buttons.calcular.addEventListener('click',executarCalculoSalario);
    salarioElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    salarioElements.buttons.salvar.addEventListener('click',handleSalvarSalario);
    investimentosElements.buttons.calcular.addEventListener('click',executarSimulacaoInvestimentos);
    investimentosElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    investimentosElements.buttons.salvar.addEventListener('click',handleSalvarInvestimentos);
    feriasElements.buttons.calcular.addEventListener('click',executarCalculoFerias);
    feriasElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    feriasElements.buttons.salvar.addEventListener('click',handleSalvarFerias);
    decimoTerceiroElements.buttons.calcular.addEventListener('click',executarCalculoDecimoTerceiro);
    decimoTerceiroElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    decimoTerceiroElements.buttons.salvar.addEventListener('click',handleSalvarDecimoTerceiro);
    horaValorElements.buttons.calcular.addEventListener('click',executarCalculoHoraValor);
    horaValorElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    horaValorElements.buttons.salvar.addEventListener('click',handleSalvarHoraValor);
    irpfElements.buttons.calcular.addEventListener('click',executarCalculoIrpf);
    irpfElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    irpfElements.buttons.salvar.addEventListener('click',handleSalvarIRPF);
    simplesNacionalElements.buttons.calcular.addEventListener('click',executarCalculoSimplesNacional);
    simplesNacionalElements.buttons.voltar.addEventListener('click',()=>showScreen('pjDashboard'));
    simplesNacionalElements.buttons.salvar.addEventListener('click',handleSalvarSimplesNacional);
    pjHoraValorElements.buttons.calcular.addEventListener('click',executarCalculoPjHoraValor);
    pjHoraValorElements.buttons.voltar.addEventListener('click',()=>showScreen('pjDashboard'));
    pjHoraValorElements.buttons.salvar.addEventListener('click',handleSalvarPjHoraValor);
    aposentadoriaElements.buttons.calcular.addEventListener('click',executarCalculoAposentadoria);
    aposentadoriaElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    aposentadoriaElements.buttons.salvar.addEventListener('click',handleSalvarAposentadoria);
    profileElements.buttons.salvar.addEventListener('click',handleSaveProfile);
    profileElements.buttons.voltar.addEventListener('click',()=>showScreen('dashboard'));
    reportsElements.backButton.addEventListener('click',()=>showScreen('dashboard'));
    historicoElements.voltar.addEventListener('click',()=>showScreen('dashboard'));
    modalElements.closeBtn.addEventListener('click',()=>modalElements.overlay.classList.add('hidden'));
    modalElements.overlay.addEventListener('click',e=>{if(e.target===modalElements.overlay)modalElements.overlay.classList.add('hidden');});
    const tabs={s:document.getElementById('tab-sobre-btn'),p:document.getElementById('tab-parametros-btn'),sC:document.getElementById('tab-sobre-content'),pC:document.getElementById('tab-parametros-content')};
    tabs.s.addEventListener('click',()=>{tabs.sC.classList.remove('hidden');tabs.pC.classList.add('hidden');tabs.s.classList.add('active');tabs.p.classList.remove('active');});
    tabs.p.addEventListener('click',()=>{tabs.sC.classList.add('hidden');tabs.pC.classList.remove('hidden');tabs.s.classList.remove('active');tabs.p.classList.add('active');});

    // ==================================================================================
    // PARTE 9: INICIALIZAÇÃO FINAL
    // ----------------------------------------------------------------------------------
    supabaseClient.auth.onAuthStateChange((_event, session) => updateUserUI(session ? session.user : null));
    console.log("main.js carregado com sucesso. Aplicação pronta.");
});

